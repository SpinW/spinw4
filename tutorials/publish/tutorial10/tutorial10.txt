<div class="content"><h1>How to produce constant energy cut of spin wave spectrum?</h1><!--introduction--><p>This example shows how to calculate the spin wave spectrum of the square lattice Heisenberg antiferromagnet and to produce a constant energy cut of the spectrum.</p><!--/introduction--><h2>Contents</h2><div><ul><li><a href="#1">Crystal &amp; magnetic structure</a></li><li><a href="#2">Spin wave</a></li><li><a href="#3">Spin wave spectrum</a></li><li><a href="#4">Creat the Q map</a></li><li><a href="#5">Plotting E=const cut</a></li><li><a href="#6">Constant energy cut using Horace</a></li></ul></div><h2 id="1">Crystal &amp; magnetic structure</h2><p>Using sw_model, the crystal and magnetic structure are readily available. Using the 'squareAF' option, a square lattice Heisenberg Antiferromagnet with S = 1 and J = 1 is created.</p><pre class="codeinput">sq = sw_model(<span class="string">'squareAF'</span>,1,0);
plot(sq)
swplot.zoom(2)
</pre><img vspace="5" hspace="5" src="%ATTACHURLPATH%/tutorial10_01.png" style="width:560px;height:420px;" alt=""> <h2 id="2">Spin wave</h2><p>We need to define a grid in reciprocal space, here we use the (Qh, Qk, 0) square lattice plane by calling ndgrid() function.</p><pre class="codeinput">nQ = 201;
nE = 501;
Qhv = linspace(0,2,nQ);
Qkv = linspace(0,2,nQ);
Qlv = 0;
[Qh, Qk, Ql] = ndgrid(Qhv,Qkv,Qlv);

<span class="comment">% Create a list of Q point, with dimensions of [3 nQ^2].</span>
Q = [Qh(:) Qk(:) Ql(:)]';
</pre><h2 id="3">Spin wave spectrum</h2><p>We calculates the spin wave spectrum at the list of Q points, bin the diagonal of the spin-spin correlation function (Sxx+Syy+Szz) in energy and convolute with a finite instrumental resolution.</p><pre class="codeinput">spec = sq.spinwave(Q);

Ev = linspace(0,5,nE);
spec = sw_egrid(spec,<span class="string">'component'</span>,<span class="string">'Sxx+Syy+Szz'</span>,<span class="string">'Evect'</span>,Ev);
spec = sw_instrument(spec,<span class="string">'dE'</span>,0.1);
</pre><h2 id="4">Creat the Q map</h2><p>The calculated intensity map is stored in spec.swConv, we reshape it into a 3D matrix using Matlab commands.</p><pre class="codeinput">spec3D = reshape(spec.swConv,nE-1,nQ,nQ);
</pre><h2 id="5">Plotting E=const cut</h2><p>A constant energy cut takes the (Eidx,:,:) elements of the matrix and plots it using the Matlab function imagesc(). We also integrate in energy the same way Horace does by taking the average of the points and rescaling with the energy bin size.</p><pre class="codeinput">Ecut = [3.5 4.0]; <span class="comment">%meV</span>
Eidx = find(Ev&gt;Ecut(1) &amp; Ev&lt;Ecut(2));
figure;
cut1 = squeeze(sum(spec3D(Eidx,:,:),1))/numel(Eidx)/(Ev(2)-Ev(1));
imagesc(Qhv,Qkv,cut1);
set(gca,<span class="string">'YDir'</span>,<span class="string">'normal'</span>)
xlabel(<span class="string">'(H 0 0) (r.l.u.)'</span>)
ylabel(<span class="string">'(0 K 0) (r.l.u.)'</span>)
title(<span class="string">'Spin wave spectrum at E = 3 meV, square lattice Heisenberg AF'</span>)
caxis([0 3])
colorbar
</pre><img vspace="5" hspace="5" src="%ATTACHURLPATH%/tutorial10_02.png" style="width:560px;height:420px;" alt=""> <h2 id="6">Constant energy cut using Horace</h2><p>We can do the same cut much easyer using Horace (<a href="http://horace.isis.rl.ac.uk">http://horace.isis.rl.ac.uk</a>). Assuming that Horace is installed and initialized we can do the same constant energy cut with just three steps. First we create an empty d3d object that defines the (h,k,0) plane with ranges in momentum and energy. Second we call Horace to fill up the empty d3d object with the simulated spin wave data and finally we plot a constant energy cut.</p><pre class="codeinput">d3dobj = d3d(sq.abc,[1 0 0 0],[0,0.01,2],[0 1 0 0],[0,0.01,2],[0 0 0 1],[0,0.01,5]);
d3dobj = disp2sqw_eval(d3dobj,@sq.horace,{<span class="string">'component'</span>,<span class="string">'Sxx+Syy+Szz'</span>},0.1);
plot(cut(d3dobj,[],[],[3.5 4]));
colorslider(<span class="string">'delete'</span>)
title(<span class="string">''</span>)
caxis([0 3])
colorbar
</pre><pre class="codeoutput">--------------------------------------------------------------------------------
Taking cut from dnd object...
</pre><img vspace="5" hspace="5" src="%ATTACHURLPATH%/tutorial10_03.png" style="width:560px;height:420px;" alt=""> <pre>Written by
Sandor Toth
06-Jun-2014, 06-Feb-2017</pre><p class="footer"><br><a href="http://www.mathworks.com/products/matlab/">Published with MATLAB&reg; R2016b</a><br></p></div><!--
<literal>##### SOURCE BEGIN #####
%% How to produce constant energy cut of spin wave spectrum?
% This example shows how to calculate the spin wave spectrum of the square
% lattice Heisenberg antiferromagnet and to produce a constant energy cut
% of the spectrum.

%% Crystal & magnetic structure
% Using sw_model, the crystal and magnetic structure are readily available.
% Using the 'squareAF' option, a square lattice Heisenberg Antiferromagnet
% with S = 1 and J = 1 is created.

sq = sw_model('squareAF',1,0);
plot(sq)
swplot.zoom(2)

%% Spin wave
% We need to define a grid in reciprocal space, here we use the (Qh, Qk, 0)
% square lattice plane by calling ndgrid() function.

nQ = 201;
nE = 501;
Qhv = linspace(0,2,nQ);
Qkv = linspace(0,2,nQ);
Qlv = 0;
[Qh, Qk, Ql] = ndgrid(Qhv,Qkv,Qlv);

% Create a list of Q point, with dimensions of [3 nQ^2].
Q = [Qh(:) Qk(:) Ql(:)]';

%% Spin wave spectrum
% We calculates the spin wave spectrum at the list of Q points, bin the
% diagonal of the spin-spin correlation function (Sxx+Syy+Szz) in energy
% and convolute with a finite instrumental resolution.

spec = sq.spinwave(Q);

Ev = linspace(0,5,nE);
spec = sw_egrid(spec,'component','Sxx+Syy+Szz','Evect',Ev);
spec = sw_instrument(spec,'dE',0.1);


%% Creat the Q map
% The calculated intensity map is stored in spec.swConv, we reshape it into
% a 3D matrix using Matlab commands.

spec3D = reshape(spec.swConv,nE-1,nQ,nQ);

%% Plotting E=const cut
% A constant energy cut takes the (Eidx,:,:) elements of the matrix and
% plots it using the Matlab function imagesc(). We also integrate in energy
% the same way Horace does by taking the average of the points and
% rescaling with the energy bin size.

Ecut = [3.5 4.0]; %meV
Eidx = find(Ev>Ecut(1) & Ev<Ecut(2));
figure;
cut1 = squeeze(sum(spec3D(Eidx,:,:),1))/numel(Eidx)/(Ev(2)-Ev(1));
imagesc(Qhv,Qkv,cut1);
set(gca,'YDir','normal')
xlabel('(H 0 0) (r.l.u.)')
ylabel('(0 K 0) (r.l.u.)')
title('Spin wave spectrum at E = 3 meV, square lattice Heisenberg AF')
caxis([0 3])
colorbar

%% Constant energy cut using Horace
% We can do the same cut much easyer using Horace
% (http://horace.isis.rl.ac.uk). Assuming that Horace is installed and
% initialized we can do the same constant energy cut with just three steps.
% First we create an empty d3d object that defines the (h,k,0) plane with
% ranges in momentum and energy. Second we call Horace to fill up the empty
% d3d object with the simulated spin wave data and finally we plot a
% constant energy cut.

d3dobj = d3d(sq.abc,[1 0 0 0],[0,0.01,2],[0 1 0 0],[0,0.01,2],[0 0 0 1],[0,0.01,5]);
d3dobj = disp2sqw_eval(d3dobj,@sq.horace,{'component','Sxx+Syy+Szz'},0.1);
plot(cut(d3dobj,[],[],[3.5 4]));
colorslider('delete')
title('')
caxis([0 3])
colorbar


%%
%  Written by
%  Sandor Toth
%  06-Jun-2014, 06-Feb-2017
##### SOURCE END #####</literal>
-->